<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.takefree.dao.ComplaintMapper">
    <resultMap id="BaseResultMap" type="com.takefree.model.ComplaintDO">
        <id column="id" jdbcType="BIGINT" property="Id" />
        <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
        <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
        <result column="share_id" jdbcType="BIGINT" property="shareId" />
        <result column="submitter_id" jdbcType="BIGINT" property="submitterId" />
        <result column="receiver_id" jdbcType="BIGINT" property="receiverId" />
        <result column="type" jdbcType="TINYINT" property="type" />
        <result column="content" jdbcType="VARCHAR" property="content" />
        <result column="status" jdbcType="TINYINT" property="status" />
        <result column="complaint_result" jdbcType="VARCHAR" property="complaintResult" />
        <result column="version" jdbcType="INTEGER" property="version" />
    </resultMap>

    <sql id="Query_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                <trim prefix="(" prefixOverrides="and" suffix=")">
                    <foreach collection="criteria.criteria" item="criterion">
                        <choose>
                            <when test="criterion.noValue">
                                and ${criterion.condition}
                            </when>
                            <when test="criterion.singleValue">
                                and ${criterion.condition} #{criterion.value}
                            </when>
                            <when test="criterion.betweenValue">
                                and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                            </when>
                            <when test="criterion.listValue">
                                and ${criterion.condition}
                            <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                #{listItem}
                            </foreach>
                            </when>
                        </choose>
                    </foreach>
                </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Update_By_Query_Where_Clause">
        <where>
            <foreach collection="query.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Base_Column_List">
        id,gmt_create,gmt_modified,share_id,submitter_id,receiver_id,type,content,status,complaint_result,version
    </sql>

    <select id="selectByQuery" parameterType="com.takefree.query.ComplaintQuery" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List" />
            from complaint
        <if test="_parameter != null">
            <include refid="Query_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <include refid="MysqlDialectSuffix" />
    </select>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select <include refid="Base_Column_List" /> from complaint where id = #{Id,jdbcType=BIGINT}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from complaint where id = #{Id,jdbcType=BIGINT}
    </delete>

    <delete id="deleteByQuery" parameterType="com.takefree.query.ComplaintQuery">
        delete from complaint
        <if test="_parameter != null">
            <include refid="Query_Where_Clause" />
        </if>
    </delete>

    <insert id="insertSelective" parameterType="com.takefree.model.ComplaintDO">
        <selectKey keyProperty="Id" order="AFTER" resultType="java.lang.Long">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into complaint
        <trim prefix="(" suffix=")" suffixOverrides=",">
            gmt_create,gmt_modified,
            <if test="shareId != null">
                share_id,
            </if>
            <if test="submitterId != null">
                submitter_id,
            </if>
            <if test="receiverId != null">
                receiver_id,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="content != null">
                content,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="complaintResult != null">
                complaint_result,
            </if>
            <if test="version != null">
                version,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            now(),now(),
            <if test="shareId != null">
                #{shareId,jdbcType=BIGINT},
            </if>
            <if test="submitterId != null">
                #{submitterId,jdbcType=BIGINT},
            </if>
            <if test="receiverId != null">
                #{receiverId,jdbcType=BIGINT},
            </if>
            <if test="type != null">
                #{type,jdbcType=TINYINT},
            </if>
            <if test="content != null">
                #{content,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=TINYINT},
            </if>
            <if test="complaintResult != null">
                #{complaintResult,jdbcType=VARCHAR},
            </if>
            <if test="version != null">
                #{version,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>

    <select id="countByQuery" parameterType="com.takefree.query.ComplaintQuery" resultType="java.lang.Integer">
        select count(*) from complaint
        <if test="_parameter != null">
            <include refid="Query_Where_Clause" />
        </if>
    </select>

    <update id="updateByQuerySelective" parameterType="map">
        update complaint
        <set>
            gmt_modified=now(),
            <if test="record.shareId != null">
                share_id = #{record.shareId,jdbcType=BIGINT},
            </if>
            <if test="record.submitterId != null">
                submitter_id = #{record.submitterId,jdbcType=BIGINT},
            </if>
            <if test="record.receiverId != null">
                receiver_id = #{record.receiverId,jdbcType=BIGINT},
            </if>
            <if test="record.type != null">
                type = #{record.type,jdbcType=TINYINT},
            </if>
            <if test="record.content != null">
                content = #{record.content,jdbcType=VARCHAR},
            </if>
            <if test="record.status != null">
                status = #{record.status,jdbcType=TINYINT},
            </if>
            <if test="record.complaintResult != null">
                complaint_result = #{record.complaintResult,jdbcType=VARCHAR},
            </if>
            <if test="record.version != null">
                version = #{record.version,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Query_Where_Clause" />
        </if>
    </update>

    <update id="updateByQuery" parameterType="map">
        update complaint set
        share_id = #{record.shareId,jdbcType=BIGINT},
        submitter_id = #{record.submitterId,jdbcType=BIGINT},
        receiver_id = #{record.receiverId,jdbcType=BIGINT},
        type = #{record.type,jdbcType=TINYINT},
        content = #{record.content,jdbcType=VARCHAR},
        status = #{record.status,jdbcType=TINYINT},
        complaint_result = #{record.complaintResult,jdbcType=VARCHAR},
        version = #{record.version,jdbcType=INTEGER},
        gmt_modified = now()
        <if test="_parameter != null">
            <include refid="Update_By_Query_Where_Clause" />
        </if>
    </update>

    <update id="updateByPrimaryKeySelective" parameterType="com.takefree.model.ComplaintDO">
        update complaint
        <set>
            gmt_modified=now(),
            <if test="shareId != null">
                share_id = #{shareId,jdbcType=BIGINT},
            </if>
            <if test="submitterId != null">
                submitter_id = #{submitterId,jdbcType=BIGINT},
            </if>
            <if test="receiverId != null">
                receiver_id = #{receiverId,jdbcType=BIGINT},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=TINYINT},
            </if>
            <if test="content != null">
                content = #{content,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=TINYINT},
            </if>
            <if test="complaintResult != null">
                complaint_result = #{complaintResult,jdbcType=VARCHAR},
            </if>
            <if test="version != null">
                version = #{version,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{Id,jdbcType=BIGINT}
    </update>

    <sql id="MysqlDialectSuffix">
        <if test="pageOffset &gt;= 0 and pageSize &gt; 0">
            <![CDATA[ LIMIT #{pageOffset,jdbcType=INTEGER}, #{pageSize,jdbcType=INTEGER} ]]>
        </if>
    </sql>

</mapper>
